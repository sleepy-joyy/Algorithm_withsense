function solution(survey, choices) {
    
/* 1. 서베이 성격유형 조합을 알파벳순으로 된 짝꿍조합을 만든다ㅠ?
   2. 각 성격 유형별 점수를 0으로 세팅한 객체를  만들어준다.
   3. choice 점수를 돌면서 4보다 작은지 확인한다.
     3-1 비동의일 경우                                       survey[i] = "RT"
        obj[survey[i][0]]에  += 4-choices 해서 객체키:값에 더한다   { R : 4 - choices점수} 

     3-2 동의일 경우
        obj[survey[i][1]]에 choice - 4 해서 객체키:값에 더한다      { T : choices점수 - 4} 

    4. 짝꿍 조합을 돌면서 캐릭터에게 부여된 점수가 더 큰 캐릭터를 리절트에 담아준다?
    5. 리턴리절트
    
    
["AN", "CF", "MJ", "RT", "NA"]    
---악 헷갈려!!  기억하자!!!!----------------------------------------------------
 비동의일 경우 캐릭터는 앞자리. survey[i][0]  <->  동의일 경우 캐릭터는 뒷자리 survey[i][1]
 비동의일 경우 초이스는 4보다 작다            <->   동의일 경우 초이스는 4보다크다
 비동의일 경우 계산할점수는 4-choices        <->   동의일 경우 계산할점수는 choices-4
 --------------------------------------------------------------------------
*/


    let types = ["RT", "CF", "JM", "AN"];
    let obj = { R: 0, T: 0, C: 0, F: 0, J: 0, M: 0, A: 0, N: 0 };
    let result = "";


                                                //[5, 3, 2, 7, 5] 
      choices.forEach((choice, i) =>            //choices의 길이 = survey의 길이라했으니 인덱스저장해서 서베이의 ["RT","FC"] 인덱스값에 접근
        choice < 4                              //4보다 작으면 비동의
        ? (obj[survey[i][0]] += 4 - choice)      //(비동의) survey의 i번째인덱스의 0번째 캐릭유형을 키로하는 객체 값을 4-choice 로
        : (obj[survey[i][1]] += choice - 4)       //(동의) survey i번째인덱스의 1번째 캐릭유형을 키로하는 객체 값을 choice-4 로설정
      );



      types.forEach((type) => {                   // RT, CF, JM, AN 각 두 캐릭 유형중에
          if(obj[type[0]] >= obj[type[1]]){         //앞캐릭의 점수가 크거나, 같을 경우(알파벳순) 앞캐릭의 유형을 결과에 담는다.
              result += type[0]
          } else result += type[1];                //뒷캐릭이 크면..? 뒷캐릭유형을 결과에 담는다.

      });


      return result;
    }











// choice별 얻는 스코어
// 1 -비동의-> (4-1) +3
// 2 -비동의-> (4-2) +2
// 3 -비동의-> (4-3) +1 
// 4
// 5 -동의->  (5-4) +1
// 6 -동의->  (6-4) +2
// 7 -동의->  (7-4) +3
    
